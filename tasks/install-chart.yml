---

- name: Set helm cmd namespace
  set_fact:
    helm_chart_namespace: " -n {{chart.namespace}}"
  when: chart.namespace is defined

- name: Check if installed
  shell: helm status{{ helm_chart_namespace}} {{chart.name}}
  register: helm_status_cmd
  ignore_errors: True

- name: Set vars
  set_fact:
    chart_values: "{{ chart.config_values | default({}) }}"
    chart_installed: "{{ helm_status_cmd.rc == 0 }}"

- name: Set chart configuration filename
  set_fact:
    chart_config: "/tmp/{{chart.name}}/values.yaml"
  when: not chart_installed and ( chart_values.keys() | length > 0 )


- name: Create configuration YAML values
  blockinfile:
    path: "{{chart_config}}"
    create: yes
    block: "{{ chart_values | to_nice_yaml(width=80, indent=2) }}"
  when: not chart_installed and ( chart_values.keys() | length > 0 )

- name: Set helm cmd config option
  set_fact:
    helm_chart_options: " -f {{ chart_config }}"
  when: not chart_installed and ( chart_values.keys() | length > 0 )

- name: Set helm cmd version
  set_fact:
    helm_chart_version: " --version {{chart.version}}"
  when: chart.version is defined

- name: Create namespace if not exists
  k8s:
    name: "{{ chart.namespace }}"
    api_version: v1
    kind: Namespace
    state: present
  when: chart.namespace is defined

- name: Install chart
  shell: helm install {{ chart.name }} {{ chart.chart }}{{ helm_chart_options | default('') }}{{ helm_chart_version | default('') }}{{ helm_chart_namespace | default('') }}
  when: not chart_installed

- name: Remove configuration YAML file
  file:
    path: "/tmp/{{chart.name}}/"
    state: absent
